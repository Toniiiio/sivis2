% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sivis.R
\name{json_from_string}
\alias{json_from_string}
\title{Extract json from string}
\usage{
json_from_string(
  response_string,
  json_regex = c(json_object = "\\\\{(?:[^{}]+|(?R))*?\\\\}"),
  req_single_quote = FALSE,
  target_values = NULL,
  index_nr = NULL
)
}
\arguments{
\item{response_string}{Character string containing the target values. Initially, it will be the response body. In follow up iterations it will be
a part of it, e.g. a json extracted from the response body.}

\item{json_regex}{Regex for extracting a json from javascript code. Either a json object or a json array.}

\item{req_single_quote}{Boolean parameter if the json key and values are identified with a single quote. Example:
{'price': '69'} instead of {"price": "69"}}

\item{target_values}{The strings selected by the user within the browser. For these values the corresponding extraction
method has to be found.}

\item{index_nr}{If multiple jsons are present, the index_nr points at the json containing the target values}
}
\description{
In some cases a json, containing the target values, is nested within javascript code. This function
generates the extraction path for the json.
}
\examples{
doc_script_json <- 'var doc = {target: "target_text"}'
json_from_string(doc_script_json, json_regex = c(jsonObject = "\\\\{(?:[^{}]+|(?R))*?\\\\}"), req_single_quote = FALSE, target_values = "target_text", index_nr = NULL)

doc_script_json <- 'var doc = {target: "target_text"}; var doc2 = {target: "other text"}'
json_from_string(doc_script_json, json_regex = c(jsonObject = "\\\\{(?:[^{}]+|(?R))*?\\\\}"), req_single_quote = FALSE, target_values = "target_text", index_nr = NULL)
json_from_string(doc_script_json, json_regex = c(jsonObject = "\\\\{(?:[^{}]+|(?R))*?\\\\}"), req_single_quote = FALSE, target_values = NULL, index_nr = 1)
}
