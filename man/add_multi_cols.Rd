% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sivis.R
\name{add_multi_cols}
\alias{add_multi_cols}
\title{Identifying additional columns / variables from xml/html document}
\usage{
add_multi_cols(
  XPathes,
  response_string,
  extract_pathes,
  search_multi_cols,
  page_url
)
}
\arguments{
\item{XPathes}{todo: can there be multiple xpathes here? only one is used and only that makes sense. Todo: savely reduce to one.}

\item{response_string}{An string with html content}

\item{extract_pathes}{The target data can be nested in multiple data formats. For example a json containg html code.
To build and dynamically update the scraper all extraction steps have to be available and in the correct order.
Therefore, this extraction steps will be stored in this variable: extract_pathes and updated in the corresponding
extraction functions.}

\item{search_multi_cols}{todo: i should be able to savely remove this parameter}

\item{page_url}{In the interactive session the user can select additional columns that are created with this function.
Then the Markdown file is updated. For that the url is required. Todo: It might be better to assign the url at an earlier
step to sivis$url?}
}
\value{
Does not return a value, since the result is required in the interactive session with the user. Therfore, the
value is written to a new environment called sivis.
The result of the function is written to sivis$more_cols.
and to multicol_filt in the global environment.
}
\description{
Relevant data might be spread across multiple columns. Selecting all data at once by the user in the browser might yield difficulties for the extraction. Manually label each column / variable might get cubersome for the user.
Another possibility is to suggest additional variables / columns to the user.
Goal: Find neighbour columns but avoid displaying other data, that is not a neighbour column.
}
\examples{
data("doc_html")
sivis <- new.env(parent = emptyenv())
xpath <- "/html/body/table/tr/td[1]"
add_multi_cols(XPathes = xpath, response_string = doc_html, extract_pathes = list(), search_multi_cols = TRUE, page_url = "")
sivis$more_cols
sivis$root_xpath
}
